plugins {
    alias(libs.plugins.androidApplication)
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.example.spotifywrapped'
    compileSdk 34

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId "com.example.spotifywrapped"
        minSdk 33
        targetSdk 34
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [redirectSchemeName: "spotifywrapped", redirectHostName: "auth"]

        def localPropertiesFile = rootProject.file('local.properties')
        if (localPropertiesFile.exists()) {
            Properties localProperties = new Properties()
            localProperties.load(new FileInputStream(localPropertiesFile))
            String openAiApiKey = localProperties.getProperty('OPENAI_API_KEY')
            buildConfigField "String", "OPENAI_API_KEY", "\"${openAiApiKey}\""

            String clientID = localProperties.getProperty('CLIENT_ID')
            buildConfigField "String", "CLIENT_ID", "\"${clientID}\""

            String redirectURI = localProperties.getProperty('REDIRECT_URI')
            buildConfigField "String", "REDIRECT_URI", "\"${redirectURI}\""
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    def fragment_version = "1.6.2"
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    implementation 'com.spotify.android:auth:2.1.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'dev.ai4j:openai4j:0.17.0'

    implementation 'com.github.shts:StoriesProgressView:3.0.0'
    implementation 'com.mikhaellopez:circularimageview:4.3.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.squareup.picasso:picasso:2.8'

    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'

    implementation(platform("com.google.firebase:firebase-bom:32.8.0"))

    // Add the dependency for the Cloud Storage library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-storage:20.0.0'
    implementation 'com.firebaseui:firebase-ui-storage:8.0.2'

    implementation 'com.google.android.material:material:1.2.1'

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.firebase.analytics
    implementation libs.firebase.auth
    implementation libs.firebase.database
    implementation libs.firebase.crashlytics.buildtools
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    implementation libs.lifecycle.viewmodel
    implementation libs.lifecycle.livedata
    implementation libs.lifecycle.runtime
}