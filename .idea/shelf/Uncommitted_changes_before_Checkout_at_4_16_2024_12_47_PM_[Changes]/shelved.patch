Index: app/src/main/java/com/example/spotifywrapped/WrappedActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.spotifywrapped;\r\n\r\nimport static java.util.Arrays.asList;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\nimport jp.shts.android.storiesprogressview.StoriesProgressView;\r\n\r\npublic class WrappedActivity extends AppCompatActivity implements StoriesProgressView.StoriesListener {\r\n\r\n    private WrappedViewModel wrappedVM;\r\n\r\n    private List<Class<? extends Fragment>> fragments = asList(\r\n            TransitionFragment.class, TransitionFragment.class,\r\n            TopArtistFragment.class, TransitionFragment.class,\r\n            TopItemsFragment.class, TransitionFragment.class,\r\n            TopGenresFragment.class, TransitionFragment.class,\r\n            TopAlbumsFragment.class, TransitionFragment.class,\r\n            SummaryFragment.class, LLMFragment.class);\r\n\r\n    private int numPages;\r\n    long pressTime = 0L;\r\n    long limit = 700L;\r\n\r\n    private StoriesProgressView storiesProgressView;\r\n    private ArrayList<String> audioList;\r\n    private MediaPlayer mediaPlayer;\r\n    private int counter = 0;\r\n\r\n    private boolean isSummary;\r\n\r\n    private final View.OnTouchListener onTouchListener = new View.OnTouchListener() {\r\n        @Override\r\n        public boolean onTouch(View view, MotionEvent motionEvent) {\r\n            switch (motionEvent.getAction()) {\r\n                case MotionEvent.ACTION_DOWN:\r\n\r\n                    pressTime = System.currentTimeMillis();\r\n                    storiesProgressView.pause();\r\n                    return false;\r\n\r\n                case MotionEvent.ACTION_UP:\r\n                    long now = System.currentTimeMillis();\r\n                    storiesProgressView.resume();\r\n                    return limit < now - pressTime;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setContentView(R.layout.wrapped_layout);\r\n\r\n        Intent receiverIntent = getIntent();\r\n        String range = receiverIntent.getStringExtra(\"term\");\r\n\r\n        wrappedVM = new ViewModelProvider(this).get(WrappedViewModel.class);\r\n        wrappedVM.getFirebaseData(range);\r\n\r\n        // I hope no one ever sees this line of code. It tells you whether this is a summary or a regular wrapped.\r\n        if (range.length() > 15) {\r\n            isSummary = true;\r\n        } else {\r\n            isSummary = false;\r\n        }\r\n\r\n        wrappedVM.getBool().observe(this, new Observer<Boolean>() {\r\n            @Override\r\n            public void onChanged(Boolean aBoolean) {\r\n                audioList = wrappedVM.getAudioList();\r\n                playAudio();\r\n            }\r\n        });\r\n\r\n        WrappedMiscellaneous.setCounter(0);\r\n\r\n        numPages = fragments.size();\r\n\r\n        storiesProgressView = (StoriesProgressView) findViewById(R.id.stories);\r\n        storiesProgressView.setStoriesCount(fragments.size());\r\n        storiesProgressView.setStoryDuration(9000L);\r\n        storiesProgressView.setStoriesListener(this);\r\n        storiesProgressView.startStories(counter);\r\n\r\n        View reverse = findViewById(R.id.reverse);\r\n\r\n        reverse.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                storiesProgressView.reverse();\r\n            }\r\n        });\r\n\r\n        reverse.setOnTouchListener(onTouchListener);\r\n\r\n        View skip = findViewById(R.id.skip);\r\n        skip.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                storiesProgressView.skip();\r\n            }\r\n        });\r\n        skip.setOnTouchListener(onTouchListener);\r\n    }\r\n\r\n    @Override\r\n    public void onNext() {\r\n        if (counter < numPages) {\r\n            int next = counter + 1;\r\n            getCorrectFragment(next);\r\n            if (audioList != null) {\r\n                if (mediaPlayer == null) {\r\n                    mediaPlayer = new MediaPlayer();\r\n                }\r\n                playAudio();\r\n            }\r\n        } else {\r\n            if (mediaPlayer != null) {\r\n                releaseMediaPlayer();\r\n            }\r\n            this.onComplete();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPrev() {\r\n        if ((counter - 1) < 0) return;\r\n        int prev = counter - 1;\r\n        getCorrectFragment(prev);\r\n\r\n        if (audioList != null) {\r\n            if (mediaPlayer == null) {\r\n                mediaPlayer = new MediaPlayer();\r\n            }\r\n            playAudio();\r\n        }\r\n    }\r\n\r\n    private void getCorrectFragment(int i) {\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n\r\n        boolean transactionForward = i > counter;\r\n\r\n        int enterAnimation = transactionForward ? R.anim.enter_right_to_left : R.anim.enter_left_to_right;\r\n        int exitAnimation = transactionForward ? R.anim.exit_right_to_left : R.anim.exit_left_to_right;\r\n\r\n        fragmentManager.beginTransaction()\r\n                .setCustomAnimations( enterAnimation, exitAnimation)\r\n                .replace(R.id.fragmentContainerView, fragments.get(i), null)\r\n                .setReorderingAllowed(true)\r\n                .addToBackStack(\"name\") // Name can be null\r\n                .commit();\r\n\r\n        counter = i;\r\n        WrappedMiscellaneous.setCounter(i);\r\n    }\r\n\r\n    private void playAudio() {\r\n\r\n        releaseMediaPlayer();\r\n\r\n        String audioUrl = audioList.get(counter);\r\n\r\n        // initializing media player\r\n        mediaPlayer = new MediaPlayer();\r\n\r\n        // below line is use to set the audio\r\n        // stream type for our media player.\r\n//        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);\r\n\r\n        System.out.println(audioUrl);\r\n\r\n\r\n        String rick = getString(R.string.rickroll);\r\n\r\n\r\n        int randomCount = 0;\r\n        while (audioUrl.equals(\"null\")) {\r\n            Random random = new Random();\r\n            audioUrl = audioList.get(random.nextInt(audioList.size() - fragments.size()) + fragments.size() - 1);\r\n\r\n            randomCount+=1;\r\n            if (randomCount > 5) {\r\n                audioUrl = rick;\r\n            }\r\n        }\r\n\r\n        // below line is use to set our\r\n        // url to our media player.\r\n        try {\r\n            mediaPlayer.setDataSource(audioUrl);\r\n            // below line is use to prepare\r\n            // and start our media player.\r\n            mediaPlayer.prepare();\r\n            mediaPlayer.start();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onComplete() {\r\n\r\n        new AlertDialog.Builder(this)\r\n                .setMessage(\"Would you like to export an image file of your wrapped summary?\")\r\n                .setIcon(android.R.drawable.ic_dialog_alert)\r\n                .setCancelable(false)\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int whichButton) {\r\n                        getSummaryImage(true);\r\n                        if ((isSummary == false)) {\r\n                            showSecondDialog();\r\n                        } else {\r\n                            endActivity(DashboardActivity.class);\r\n                        }\r\n                    }\r\n                })\r\n                .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        if ((isSummary == false)) {\r\n                            showSecondDialog();\r\n                        } else {\r\n                            endActivity(DashboardActivity.class);\r\n                        }\r\n                    }\r\n                }).show();\r\n    }\r\n\r\n    private void showSecondDialog() {\r\n        new AlertDialog.Builder(WrappedActivity.this)\r\n                .setMessage(\"Would you like to save your wrapped summary to be viewed later?\")\r\n                .setIcon(android.R.drawable.ic_dialog_alert)\r\n                .setCancelable(false)\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int whichButton) {\r\n                        wrappedVM.storeWrapped();\r\n                        showThirdDialog();\r\n                    }\r\n                })\r\n                .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        showThirdDialog();\r\n                    }\r\n                }).show();\r\n    }\r\n\r\n    public void showThirdDialog() {\r\n        new AlertDialog.Builder(WrappedActivity.this)\r\n                .setMessage(\"Would you like to play a mini-game?\")\r\n                .setIcon(android.R.drawable.ic_dialog_alert)\r\n                .setCancelable(false)\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int whichButton) {\r\n                        endActivity(GamesActivity.class);\r\n                    }\r\n                })\r\n                .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        endActivity(DashboardActivity.class);\r\n                    }\r\n                }).show();\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        storiesProgressView.destroy();\r\n        releaseMediaPlayer();\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void releaseMediaPlayer() {\r\n        if (mediaPlayer != null && mediaPlayer.isPlaying()) {\r\n            mediaPlayer.stop();\r\n            mediaPlayer.reset();\r\n            mediaPlayer.release();\r\n            mediaPlayer = null;\r\n        }\r\n    }\r\n\r\n    public Bitmap getSummaryImage(boolean export) {\r\n        Bitmap summaryImage = wrappedVM.getScreenshots().get(0);\r\n        if (export) {\r\n            boolean exported = ImageExporter.saveBitmapToGallery(this, summaryImage,\r\n                    \"summary_image\", \"Image exported from layout\");\r\n            if (exported) {\r\n                Toast.makeText(this, \"Image exported successfully\", Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                Toast.makeText(this, \"Failed to export image\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n        return summaryImage;\r\n    }\r\n\r\n    public void endActivity(Class<?> activityClass) {\r\n        Intent i = new Intent(WrappedActivity.this, activityClass);\r\n        startActivity(i);\r\n        finish();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/spotifywrapped/WrappedActivity.java b/app/src/main/java/com/example/spotifywrapped/WrappedActivity.java
--- a/app/src/main/java/com/example/spotifywrapped/WrappedActivity.java	(revision 123456ccc7719b4f4936f6004bce4d8dbff355ff)
+++ b/app/src/main/java/com/example/spotifywrapped/WrappedActivity.java	(date 1712805416282)
@@ -325,5 +325,4 @@
         startActivity(i);
         finish();
     }
-
 }
